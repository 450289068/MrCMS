@using MrCMS.Paging
@using MrCMS.Web.Apps.Commenting.Entities
@using MrCMS.Helpers
@model MrCMS.Web.Apps.Commenting.Models.CommentSearchQuery
@{
    var comments = ViewData["results"] as IPagedList<Comment> ?? PagedList<Comment>.Empty;
    var approvalOptions = ViewData["approval-options"] as List<SelectListItem> ?? new List<SelectListItem>();
}
@using (Html.BeginForm("Index", "Comment", FormMethod.Get))
{
    <fieldset>
        <legend>Comments
            <span class="btn-group display-inline pull-right">
                <input type="submit" class="btn btn-primary" value="Search" />
            </span>
        </legend>

        <div class="row-fluid">
            <div class="span4">
                @Html.LabelFor(query => query.ApprovalStatus)
                @Html.DropDownListFor(query => query.ApprovalStatus, approvalOptions)
            </div>
            <div class="span4">
                @Html.LabelFor(query => query.Email)
                @Html.TextBoxFor(query => query.Email)
            </div>
            <div class="span4">
                @Html.LabelFor(query => query.Message)
                @Html.TextBoxFor(query => query.Message)
            </div>
        </div>
        <div class="row-fluid">
            <div class="span4">
                @Html.LabelFor(query => query.DateFrom)
                @Html.TextBoxFor(query => query.DateFrom, new { @class = "date-time-picker" })
            </div>
            <div class="span4">
                @Html.LabelFor(query => query.DateTo)
                @Html.TextBoxFor(query => query.DateTo, new { @class = "date-time-picker" })
            </div>
            <div class="span4">
            </div>
        </div>
    </fieldset>
    if (comments.Any())
    {
    <table class="table table-condensed table-striped">
        <thead>
            <tr>
                <th>Date
                </th>
                <th>Webpage
                </th>
                <th>By
                </th>
                <th>Message
                </th>
                <th>Status
                </th>
                <th>Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var comment in comments)
            {
                <tr>
                    <td>@comment.CreatedOn.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@Html.ActionLink(comment.Webpage.Name, "Edit", "Webpage", new { id = comment.Webpage.Id }, new { })
                    </td>
                    <td>
                        @if (comment.User != null)
                        {
                            @Html.ActionLink(comment.User.Name, "Edit", "User", new { id = comment.User.Id }, new { })
                        }
                        else
                        {
                            <text>
                            @comment.Name (@comment.Email)
                                </text>
                        }
                    </td>
                    <td>@comment.MessageTruncated()
                    </td>
                    <td>
                        @switch (comment.Approved)
                        {
                            case true:
                            <text>Approved</text>
                                break;
                            case false:
                            <text>Rejected</text>
                                break;
                            default:
                            <text>Requires Approval</text>
                                break;
                        }
                    </td>
                    <td>
                        <div class="btn-group">
                            @Html.ActionLink("Show", "Show", "Comment", new { id = comment.Id }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
                            @Html.ActionLink("Delete", "Delete", "Comment", new { id = comment.Id }, new { @class = "btn btn-danger btn-mini", data_toggle = "fb-modal" })
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.Pager(comments, "Index", page => new { page })
    }
    else
    {
    <p>
        There are currently no comments that match your search criteria.
    </p>
    }
}