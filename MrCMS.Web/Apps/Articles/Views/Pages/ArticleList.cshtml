@using MrCMS.Helpers
@using MrCMS.Web.Apps.Articles.Pages
@using NHibernate.Criterion
@model ArticleList
           
@Editable(Model, p=>p.BodyContent, true)

@{
    var category = Request["Category"];
    
    var query = QueryOver.Of<Article>()
                                     .Where(a => a.Parent == Model.Parent && a.Published)
                                     .ThenBy(arg => arg.PublishOn)
                                     .Desc;

    if (!String.IsNullOrEmpty(category))
    {
        query = query.And(doc => doc.Tags.Any(x => x.Name == category));
    }


    var pagedList = Model.PagedChildren<Article>(pageNum: Request["p"].GetIntValue(1), query: query);
}

@foreach (var page in pagedList)
{
    <div class="row-fluid">
        <div class="span12">
            <h3 class="margin-top-0"><a href="/@page.LiveUrlSegment" class="margin-top-0">@page.Name </a></h3>
            @page.CreatedOn.Day @page.CreatedOn.ToString("MMMMM") @page.CreatedOn.Year

            @if (!String.IsNullOrEmpty(page.FeatureImage))
            {
                <a href="/@page.LiveUrlSegment" class="margin-top-0">
                    <img src="@page.FeatureImage" align="left" /></a>
            }
            @Editable(page, p => p.Abstract)
        </div>
    </div>
}
@if (Model.AllowPaging)
{
    @Html.PageCurrentPage(pagedList, i => new { p = i }, PagedListRenderOptions.PageNumbersOnly)
}

