@using MrCMS.Entities.Documents
@using MrCMS.Helpers
@using MrCMS.Paging
@using MrCMS.Web.Apps.Articles.Models
@using MrCMS.Web.Apps.Articles.Pages
@using MrCMS.Website
@using NHibernate.Criterion
@model ArticleList         
@Editable(Model, p=>p.BodyContent, true)
@{
    var pagedList = ViewData["paged-articles"] as IPagedList<Article>;
    var searchModel = ViewData["article-search-model"] as ArticleSearchModel;
}
@if (pagedList !=null && !pagedList.Any() && !string.IsNullOrEmpty(searchModel.Category))
{
    <div class="alert alert-info">No posts available in category "@searchModel.Category".</div>
    <p><a href="/@Model.LiveUrlSegment">All @Model.Name</a></p>
}
@if (pagedList != null)
{
    foreach (var page in pagedList)
    {
        <div class="row">
            <div class="col-lg-12">
                <h3 class="margin-top-0"><a href="/@page.LiveUrlSegment" class="margin-top-0">@page.Name </a></h3>
                @page.CreatedOn.Day @page.CreatedOn.ToString("MMMMM") @page.CreatedOn.Year

                @if (!String.IsNullOrEmpty(page.FeatureImage))
                {
                    <a href="/@page.LiveUrlSegment" class="margin-top-0">
                        <img src="@page.FeatureImage" align="left" /></a>
                }
                @Editable(page, p => p.Abstract)
            </div>
        </div>
    }
}

@if (Model.AllowPaging)
{
    @Html.PageCurrentPage(pagedList, i => new { Page = i }, PagedListRenderOptions.PageNumbersOnly)
}

